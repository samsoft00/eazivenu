continue
Setting.find_by_config_key(m_setting.config_key.to_sym).update_attribute({m_setting.config_key.to_sym, params[m_setting.config_key.to_sym]})
params[m_setting.config_key.to_sym]
m_setting.config_key.to_sym
Setting.find_by_config_key(m_setting.config_key.to_sym).update_attribute(m_setting.config_key.to_sym, params[m_setting.config_key.to_sym])
Setting.find_by_config_key(m_setting.config_key.to_sym).update_attributes(m_setting.config_key.to_sym, params[m_setting.config_key.to_sym])
m = Setting.find_by_config_key(m_setting.config_key.to_sym)
Setting.find_by_config_key(m_setting.config_key.to_sym)
m_setting.config_key.to_sym
params[m_setting.config_key.to_sym].present?
continue
m_setting
puts s
puts 
s
continue
m = Setting.find_by_config_key(setting.config_key.to_sym)
params[setting.config_key.to_sym]
setting
continue
set
continue
params[settings.config_key.to_sym]
param[settings.config_key.to_sym]
params[settings.config_key.to_sym]
settings
settings.config_key
settings.config_key.to_sym
s
continue
continu
continue
key
key.to_sym == settings.config_key.to_sym
key.to_sym === settings.config_key.to_sym
key.to_sym == settings.config_key.to_sym
settings.config_key
key == settings.config_key
key
continue
key
continue
settings.config_key.to_s
settings.config_key
key
continue
continue]
contine
params.each_pair
setting_params
params[:ManagerLogin]
params
parmas
continue
params.ManagerLogin
params{:ManagerLogin}
params{:ManagerLogin]
params[:ManagerLogin]
params[:managerlogin]
params
params[:ManagerLogin]
param["ManagerLogin"]
params["ManagerLogin"]
params[:ManagerLogin]
settings.config_key
params[settings.config_key]
params[settings.config_key.to_sym]
settings.config_key.to_sym
continue
params[:Managerlogin].is_boolean
params[:Managerlogin]
params[:Managerlogin].present?
params
continue
params
continue
s = Setting.where(Managerloginenabled)
s = Settings.where(Managerloginenabled)
s = Setting.where(Managerloginenabled)
params.each_pair
eval("Setting.Managerloginenabled = false")
params[:Managerloginenabled]
param[:Managerloginenabled]
setting_params
continue
setting_params
continue
params
continue
params
continue
Booking.find(params[:id])
params[:id]
@booking
continue
@booking.valid?
@booking
continue
@booking.valid?
@booking
continue
book_params
params
continue
resource.user_url
resource.venues.first.slug
resource.venues.first.is_incomplete?
resource.venues.first
resource
continue
form_step
c_user
params
continue
@venue
continue
@venue.inspect
@venue
continue
@venue.inspect
params[:category]
@venue.valid?
